#!/usr/bin/env bash

#
# Copyright (C) 2019 Transaction Processing Performance Council (TPC) and/or its contributors.
# This file is part of a software package distributed by the TPC
# The contents of this file have been developed by the TPC, and/or have been licensed to the TPC under one or more contributor
# license agreements.
# This file is subject to the terms and conditions outlined in the End-User
# License Agreement (EULA) which can be found in this distribution (EULA.txt) and is available at the following URL:
# http://www.tpc.org/TPC_Documents_Current_Versions/txt/EULA.txt
# Unless required by applicable law or agreed to in writing, this software is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, and the user bears the entire risk as to quality
# and performance as well as the entire cost of service or repair in case of defect. See the EULA for more details.
#
#


#
# Copyright 2015-2019 Intel Corporation.
# This software and the related documents are Intel copyrighted materials, and your use of them
# is governed by the express license under which they were provided to you ("License"). Unless the
# License provides otherwise, you may not use, modify, copy, publish, distribute, disclose or
# transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.
#
#


helpModule () {
  echo "This module runs a single query on a single stream"
  echo
  echo "Options:"
  echo -e "-d\tdatabase to use"
  echo -e "-h\tshow this help"
  echo
  echo "INTERNAL options:"
  echo -e "-q\tquery number to run (required)"
}



runModule () {
  if ! runCmdWithErrorCheck initQueryEnv
  then
    return 1
  fi

  echo "==============================================="
  echo "Running explain query : $QUERY_NAME"
  echo "-----------------------------------------------"
  echo "user parameter file: $USER_QUERY_PARAMS_FILE"
  echo "user settings file : $USER_ENGINE_SETTINGS_FILE"
  echo "log: $EXPLAIN_LOG_FILE_NAME"
  echo "==============================================="


  #################
  # explain query.
  #################

  # Run the explain method implemented in the query's run.sh
  #Stderr is appended to stdout and both are written into logs/q??.log and to console
  "$QUERY_EXPLAIN_METHOD" 2>&1 | tee -a "$EXPLAIN_LOG_FILE_NAME" 2>&1
  local QUERY_EXIT_CODE=${PIPESTATUS[0]}

  if [ "$QUERY_EXIT_CODE" -ne 0 ]
  then
    local successOrFail="FAILED"
  else
    local successOrFail="SUCCESS"
  fi

  echo "full log: $EXPLAIN_LOG_FILE_NAME" | tee -a "$EXPLAIN_LOG_FILE_NAME" 2>&1
  echo "=========================" | tee -a "$EXPLAIN_LOG_FILE_NAME" 2>&1

 return "${QUERY_EXIT_CODE}"
}